// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InspectionsScreen should render 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "overflow": "hidden",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          collapsable={false}
          enabled={true}
          pointerEvents="auto"
          removeClippedSubviews={false}
          style={
            Array [
              Object {
                "flex": 1,
                "overflow": "hidden",
              },
              null,
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityElementsHidden={false}
              importantForAccessibility="auto"
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#e9e9e9",
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "justifyContent": "center",
                    },
                  ]
                }
                theme={
                  Object {
                    "animation": Object {
                      "scale": 1,
                    },
                    "colors": Object {
                      "accent": "#F2680E",
                      "backdrop": "rgba(0, 0, 0, 0.5)",
                      "background": "#e9e9e9",
                      "deficient": "#FF3333",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "error": "#FF2D55",
                      "gps": "#007AFE",
                      "notification": "#FF9400",
                      "onBackground": "#000000",
                      "onSurface": "#FF9400",
                      "placeholder": "rgba(0, 0, 0, 0.54)",
                      "primary": "#FF9400",
                      "secondaryText": "#888",
                      "success": "#34C759",
                      "surface": "#FFFFFF",
                      "text": "#000000",
                    },
                    "dark": false,
                    "fonts": Object {
                      "light": Object {
                        "fontFamily": "System",
                        "fontWeight": "300",
                      },
                      "medium": Object {
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      "regular": Object {
                        "fontFamily": "System",
                        "fontWeight": "400",
                      },
                      "thin": Object {
                        "fontFamily": "System",
                        "fontWeight": "100",
                      },
                    },
                    "roundness": 4,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        pointerEvents="auto"
        style={
          Object {
            "backgroundColor": "rgb(255, 255, 255)",
            "borderTopColor": "rgb(216, 216, 216)",
            "borderTopWidth": 0.5,
            "bottom": 0,
            "elevation": 8,
            "height": 49,
            "left": 0,
            "paddingBottom": 0,
            "paddingHorizontal": 0,
            "position": null,
            "right": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityLabel="ComponentToTest, tab, 1 of 1"
            accessibilityRole="button"
            accessibilityState={
              Object {
                "selected": true,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                },
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "flexDirection": "column",
                  "justifyContent": "flex-end",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "textAlign": "center",
                  },
                  Object {
                    "color": "rgb(0, 122, 255)",
                  },
                  Object {
                    "fontSize": 10,
                  },
                  undefined,
                ]
              }
            >
              ComponentToTest
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
